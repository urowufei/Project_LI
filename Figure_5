## Fig5

rm(list=ls())
setwd("~/Fei/prject1_RILI")
options(stringsAsFactors = F)
library(Seurat)
library(ggplot2)
library(clustree)
library(cowplot)
library(dplyr)
library(Matrix)
library(ggsci)
library(paletteer) 
library(Seurat)
library(ggplot2)
library(ggsci)
library("scales")

mycolors <- pal_igv("default")(51) 
show_col(pal)
table(sce.all.int@meta.data$celltype)
pal <- paletteer_d("ggsci::nrc_npg")[c(1,3,4,9,5,2,6)] 
table(sce.all.int@meta.data$celltype) 
sce.pure_epi = sce.all.int[,sce.all.int@meta.data$celltype %in%c('AT1',"AT2_1","AT2_2","Ciliated","Club",
                                                                 "Goblet")]
sce.all = NormalizeData(sce.pure_epi)
sce.all <- FindVariableFeatures(sce.all, nfeatures = 3000)
sce.all
#An object of class Seurat 
#32888 features across 109462 samples within 1 assay 
#Active assay: RNA (32888 features, 3000 variable features)
#3 dimensional reductions calculated: pca, tsne, umap

#3 dimensional reductions calculated: pca, tsne, umap

sce.all = ScaleData(sce.pure_epi,vars.to.regress = c("nFeature_RNA", "percent_mito"))  
sce.all <- RunPCA(sce.all, npcs = 30)
sce.all <- RunTSNE(sce.all, dims = 1:30)
sce.all <- RunUMAP(sce.all, dims = 1:30)

sce.all=FindNeighbors(sce.all, dims = 1:30, k.param = 60, prune.SNN = 1/15)
for (res in c(0.01, 0.05, 0.1, 0.2, 0.3, 0.5,0.8,1, 1.2)) {
  sce.all=FindClusters(sce.all, resolution = res, algorithm = 1)
}

apply(sce.all@meta.data[,grep("CCA_snn_res.",colnames(sce.all@meta.data))],2,table)
p5_tree <- clustree(sce.all@meta.data, prefix = "CCA_snn_res.") 
p5_tree
ggsave(filename="output/Figure5/Figure5/clustertree-uncaa_res-1.pdf",plot=p5_tree,height = 12,width = 10)
sce.all@meta.data$patient
sce.all <- FindClusters(sce.all, graph.name = "CCA_snn", resolution = 1.2, algorithm = 1)
p6<- DimPlot(sce.all, reduction = "tsne", group.by = "CCA_snn_res.1.2", label = T,label.box = F)+NoAxes()
p7<- DimPlot(sce.all, reduction = "umap", group.by = "CCA_snn_res.1.2", label = T,label.box = F)+NoAxes()
p6
p7
DimPlot(sce.all, reduction = "umap", group.by = "location", label = T,label.box = F)+NoAxes()
ggsave(filename="output/Figure5/DimPlot-uncaa-tsne-r1.pdf",plot=p6,height = 6,width = 8)
ggsave(filename="output/Figure5/DimPlot-uncaa-umap-r1.pdf",plot=p7,height = 6,width = 8)

table(sce.all@meta.data$seurat_clusters)
saveRDS(sce.all, file = "data/sce.all.int_uncca_ssn_res1.2.rds")
table(sce.all.int$cellt)
markers_genes <- FindAllMarkers(sce.all, logfc.threshold = 0.1, test.use = "wilcox",
                                min.pct = 0.1, min.diff.pct = 0.2, only.pos = TRUE, max.cells.per.ident = 50, 
                                assay = "RNA")
markers_genes <- read.csv(file = "data/markergenes_fibroblast_r0.5.csv")
top5 <- markers_genes %>% group_by(cluster) %>% top_n(n=5, wt =p_val)
top20 
top100 <- markers_genes %>% group_by(cluster) %>% top_n(n=100, wt =p_val)
p8 <- DoHeatmap(sce.all.int,top5$gene,size=1 )
p8
ggsave(filename="output/Figure5/Find_all_markers_heatmap.pdf",plot=p8,height = 16,width = 20)

write.csv(markers_genes, file = "data/markergenes_all_r1.csv")

a <- rownames(table(sce.all.int$celltype))
a
sce.all.int$celltype <- factor(x = sce.all.int$celltype, levels = a)  
p9 <- DoHeatmap(sce.all.int,size = 2,   
                features = as.character(unique(top5$gene)), 
                group.by = "celltype", group.colors = c("#C77CFF","#7CAE00","#00BFC4","#F8766D","#AB82FF"))+
  scale_fill_gradientn(colours = c("navy","white","firebrick3"))  
p9
ggsave(filename="output/Figure5/Find_all_markers_heatmap_fibroblast_top5.pdf",plot=p9,width = 20,height = 16)
library(ggplot2) 
library(stringr)
table(sce.all@meta.data$seurat_clusters)
DimPlot(sce.all,
        label = TRUE,group.by = "seurat_clusters")  + NoLegend()
#,split.by = "orig.ident"

genes_to_check <- list(
  Epithelial = c("Epcam","Sec24b","Krt19","Ndufs2"),
  Prolif = c("Mki67",'Cdk1',"Top2a"),
  Progenitor= c("Mcm5","Mcm6","Ube2c","Uhrf1"),
  AT2 = c("Abca3","Sftpc","Sftpb","Sftpa1","Apoe"),  
  AT1 = c("Ager","Limch1","Emp2","Pmp22","Igfbp3"),
  Basal = c("Krt8","Hopx"),  
  Club = c( "Scgb1a1", "Scgb3a2","Muc5b"),
  Ciliated = c("Saxo1","Dnah12"),
  Goblet_cells=c("Gzma","Ccl5","Nkg7","Scin")
)

# Myoepithelial = c("Peak1","Plk2","Csrnp2"),
# C11 = c("Klf5","Nmt2","Mdfic","Acvr2a","Frmd4b","Ypel2","Kcnd2"),
#Tissue redident Aveolar_macropahges
#B_cells = c("Cd79a","Ly6d","Igha","Jchain","Ppp1r16b","Ighd")
p_markers <- DotPlot(sce.all,features = genes_to_check,assay='RNA') +
  theme(axis.text.x=element_text(angle=45,hjust=1.2,vjust = 1.1,size = 8))
p_markers

celltype=data.frame(ClusterID=0:10,
                    celltype='un')
#Stromal 
celltype[celltype$ClusterID %in% c( '0'),2]='AT2_C1'
celltype[celltype$ClusterID %in% c( "6"),2]= "AT2_C2" 
celltype[celltype$ClusterID %in% c( '1',"4","8","10"),2]='AT1'  
celltype[celltype$ClusterID %in% c( '3',"7"),2]='Club' 
celltype[celltype$ClusterID %in% c( '2'),2]='Ciliated' 
celltype[celltype$ClusterID %in% c( '5',"9"),2]='Goblet'  
head(celltype)
celltype 
table(celltype$celltype)
sce.all@meta.data$celltype = "NA"
sce.all@meta.data$seurat_clusters
for(i in 1:nrow(celltype)){
  sce.all@meta.data[which(sce.all@meta.data$seurat_clusters == celltype$ClusterID[i]),'celltype'] <- celltype$celltype[i]}
table(sce.all@meta.data$celltype)

DimPlot(seurat_data, reduction = "tsne", group.by = "celltype", label=T, label.box = T,label.size=5, pt.size=1) + ggtitle('Change cluster order')
p1 <- DimPlot(sce.all, reduction = "tsne", group.by = "celltype", label = T, label.box = T,pt.size=0.5)
p2 <- DimPlot(sce.all, reduction = "umap", group.by = "celltype", label = T, label.box = T,pt.size=0.5)
p1
p2
saveRDS(sce.all,file = "data/sce_epithelial_0421.rds")
sce.all.int <- readRDS("data/sce_epithelial_0421.rds")

##featureplot
mycolor <- c('lightgrey', 'blue','seagreen2')
FeaturePlot(sce.all.int, features = c("Scgb1a1","Col1a1","Fn1","Lpl","Fabp1",
                                         "Pdgfra","Apoe","Dcn",
                                         "Acta2","Myh11","Fabp5","Mki67"),
            cols = mycolor, pt.size = 0.5)+ 
  theme(panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"))#加边框

## featureplot
FeaturePlot(sce.all.int,features = c('Pdgfra',"Il1r1", "Il6ra","Tnf","Csf3r","Csf1r"),
            reduction = "umap",pt.size = 0.5,ncol = 2,cols = c("#ccccca", "#e61a2e"),order = T)&
  theme_bw()&
  theme(
    panel.grid = element_blank(),
    legend.position = "none",
    axis.ticks = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank(),
    plot.title = element_text(hjust = 0.5,size = 20)
  )

## markergene dotplot
genes_to_check <- list(
  Epithelial = c("Epcam","Sec24b","Krt19","Ndufs2"),
  Prolif = c("Mki67",'Cdk1',"Top2a"),
  Progenitor= c("Mcm5","Mcm6","Ube2c","Uhrf1"),
  AT2 = c("Abca3","Sftpc","Sftpb","Sftpa1","Apoe"),  
  AT1 = c("Ager","Limch1","Emp2","Pmp22","Igfbp3"),
  Basal = c("Krt8","Hopx"),  
  Club = c( "Scgb1a1", "Scgb3a2","Muc5b"),
  Ciliated = c("Saxo1","Dnah12"),
  Goblet_cells=c("Gzma","Ccl5","Nkg7","Scin")
)
genes_to_check <- c("Ager","Emp2","Limch1",
                    "Abca3","Sftpc","Sftpb","Apoe",
                    "Mki67","Mcm5",
                    "Dnah12","Epm2a",
                    "Pou2f2","Top2a",
                    "Scgb1a1", "Scgb3a2",
                    "Ccl5","Nkg7","Gzma")
DotPlot(sce.all.int, features = genes_to_check, group.by = "celltype")+coord_flip()+theme_bw()+
  theme(panel.grid = element_blank(),  
        axis.text.x=element_text(angle=90,hjust = 1,vjust=0.5))+
  scale_color_gradientn(values = seq(0,1,0.2),colours = c('#330066','#336699','#66CC66','#FFCC33'))+
  labs(x=NULL,y=NULL)+guides(size=guide_legend(order=3)) 


### UMAP
library(paletteer) 
library(Seurat)
library(ggplot2)
library(ggsci)
library("scales")
mycolors <- pal_igv("default")(51) 
mycolors
show_col(pal)
table(sce.all.int@meta.data$celltype)
pal <- paletteer_d("ggsci::nrc_npg")#[c(1,3,4,9,5,2,6)] 
pal
p <- DimPlot(sce.all.int,reduction = "umap", group.by = "celltype",cols= mycolors,pt.size = 0.5,label = T,repel = T)+  
  NoLegend()+labs(x = "UMAP1", y = "UMAP2") +   
  theme(axis.text.y = element_blank(),   
        axis.ticks.y = element_blank(),   
        axis.text.x = element_blank(),   
        axis.ticks.x = element_blank())+  
  theme(panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"))  
p
ggsave("output/Figure5/Fig5a-UMAP-2.pdf", p, width = 8, height = 6)

#Fibro
library(dplyr)
Idents(sce.all.int) <- "celltype"
head(Idents(sce.all.int))
markers_genes <- FindAllMarkers(sce.all.int, logfc.threshold = 0.1, test.use = "wilcox",
                                min.pct = 0.1, min.diff.pct = 0.2, only.pos = TRUE, max.cells.per.ident = 50, 
                                assay = "RNA")
write.csv(markers_genes,file = "output/Figure5/Figure3/markergenes_fibroblast_r0.5.csv")
??top_n
top10 <- markers_genes %>% group_by(cluster) %>% top_n(n=20, wt =p_val)
top10 
top1000 <- markers_genes %>% group_by(cluster) %>% top_n(n=1000, wt =p_val)
p8 <- DoHeatmap(sce.all.int,top10$gene,size=1 )
p8
ggsave(filename="output/Figure5/Find_all_markers_heatmap.pdf",plot=p8,height = 16,width = 20)
write.csv(markers_genes, file = "data/markergenes_all_r1.csv")
table(sce.all.int$celltype)
sce.all.int$celltype <- factor(x = sce.all.int$celltype, levels = c('AT1','Goblet','Ciliated','Club','AT2_C1','AT2_C2'))  

p9 <- DoHeatmap(sce.all.int,size = 2,   
                features = as.character(unique(top1000$gene)), 
                group.by = "celltype", group.colors = pal )+ 
  scale_fill_gradientn(colours = c("navy","white","firebrick3")) 
p9
ggsave(filename="output/Figure5/Find_all_markers_heatmap_fibroblast_top1000.pdf",plot=p9,width = 20,height = 16)


pal <- paletteer_d("ggsci::nrc_npg")[c(1,3,4,5,10,2,9)]
pal

DimPlot(sce.all.int, reduction = "tsne", group.by = "therapy", label = F, label.box = F,cols= pal)
DimPlot(sce.all.int, reduction = "umap", group.by = "therapy", label = F, label.box = F,cols= pal)

DimPlot(sce.all.int, reduction = "tsne", group.by = "time", label = F, label.box = F,cols= pal)
DimPlot(sce.all.int, reduction = "umap", group.by = "time", label = F, label.box = F,cols= pal)
DimPlot(sce.all.int, reduction = "tsne", group.by = "Phase", label = F, label.box = F,cols= pal)
DimPlot(sce.all.int, reduction = "umap", group.by = "Phase", label = F, label.box = F,cols= pal)

table(sce.all.int@meta.data$celltype)

##############################################################################################################
library(gplots)
seurat <- sce.all.int
phe=sce.all.int@meta.data

tab.1=table(phe$seurat_clusters, phe$celltype)
tab.1 
pro='cluster'
pdf(file = paste0(pro,'last_celltype_vs_seurat_clusters.pdf'),width = 12)
balloonplot(tab.1, main ="last_celltype VS seurat_clusters ", xlab ="", ylab="",
            label = T, show.margins = F)
dev.off()
head(phe)
tb=as.data.frame(table(phe$celltype),stringsAsFactors = F)
tb=tb[order(tb$Freq,decreasing=F),]
tb
write.csv(tb,file="all-celltype-fractions.csv")
colnames(tb) <- c('Celltype', 'Freq')
percentage <- scales::percent(tb$Freq / sum(tb$Freq))
percentage
labs <- paste0(tb$Celltype,'(', percentage, ')')
labs
tb$cell=factor(tb$Celltype,levels=tb$Celltype)
p.pie= ggplot(tb, aes(x = "", y = Freq, fill = cell)) + 
  geom_bar(stat = "identity",width = 1) + 
  scale_fill_manual(breaks = tb$cell, labels = labs,values=fei_col) +
  labs(x = "", y = "", title = "") +
  coord_polar(theta = "y")  +
  theme(axis.ticks = element_blank()) 
p.pie
ggsave(plot=p.pie,filename="output/Figure5/total_pie-all.pdf",width=8, height=6)

colnames(phe)
table(phe$orig.ident)
test=phe[,c("orig.ident" ,"time", "therapy","Phase","celltype")] 
test$cell=factor(test$celltype,levels=rev(tb$Celltype))
head(test)
p.bar.sample=ggplot(test, aes(x=orig.ident, fill=cell)) +
  geom_bar(position="fill") + scale_fill_manual(values=fei_col) +
  labs(title='Cell proportion of each sample') +theme_bw()  
p.bar.sample
ggsave(plot=p.bar.sample,filename="output/Figure5/new/Bar.sample.pdf",
       width=5, height=5)

p.bar.group1=ggplot(test, aes(x=therapy, fill=cell)) +
  geom_bar(position="fill") + scale_fill_manual(values=fei_col) +
  labs(title='Cell proportion of each therapy')
p.bar.group1
ggsave(plot=p.bar.group1,filename="output/Figure5/new/Bar.group-therapy.pdf",width=3, height=5)

p.bar.group2=ggplot(test, aes(x=time, fill=cell)) +
  geom_bar(position="fill") + scale_fill_manual(values=fei_col) +
  labs(title='Cell proportion of each timepoint')
p.bar.group2
ggsave(plot=p.bar.group2,filename="output/Figure5/new/Bar.group-timepoint.pdf",width=3, height=5) 

p.bar.group=ggplot(test, aes(x=Phase, fill=cell)) +
  geom_bar(position="fill") + scale_fill_manual(values=fei_col) +
  labs(title='Cell proportion of each Phase')
p.bar.group
ggsave(plot=p.bar.group,filename="output/Figure5/new/Bar.group-phase.pdf",width=3, height=5)

library(patchwork)
p.patch <- p.bar.sample+p.bar.group1+p.bar.group2
p.patch
ggsave(plot=p.patch,filename="output/Figure5/new/Bar.group-patch.pdf",width=16, height=6)



##APoe-AT2

test2 = filter(test,test$celltype == "Apoe_high_AT2")
head(test2)
test2$orig.ident <- factor(test2$orig.ident, levels=c("Control","ICI_d7","IR_d7","iRT_d7",
                                                      "ICI_d30","IR_d30","iRT_d30"), ordered=TRUE)
write.csv(test2, file = "output/Figure5/Figure5/cellprop_epi_Apoe.csv")
write.csv(test, file = "output/Figure5/Figure5/cellprop_epi.csv")
table(test$orig.ident)

p11=ggplot(test2, aes(x=orig.ident, y=cell))+
        geom_bar(fill="#F39B7FFF", color="black")+theme_classic()
p11

  #geom_col() + scale_fill_manual(values="#8E8BFB") +
  #labs(title='Cell proportion of each therapy')

#BiocManager::install("ComplexHeatmap")
library(ComplexHeatmap)
mat <- GetAssayData(sce.all.int, slot = "counts")
mat <- log2(mat+1)
gene_features <- top10
sce.all.int@meta.data$seurat_clusters

#BiocManager::install("corrplot")
library(corrplot)
av <-AverageExpression(sce.all.int,
                       group.by = "celltype",
                       assays = "RNA") 
av=av[[1]]
head(av)
cg=names(tail(sort(apply(av, 1, sd)),1000))
## scale = "row"
pheatmap::pheatmap(cor(av[cg,]),scale = "row",clustering_distance_rows = "correlation",treeheight_row = 30, treeheight_col = 50)

pheatmap(cor(av[cg,]),scale = "row", color = colorRampPalette(c("navy", "white", "firebrick3"))(100),,treeheight_row = 30, treeheight_col = 50)

#corrplot
corrplot(cor(av[cg,]))
#corrplot
corrplot(cor(av[cg,]),method = "pie")
corrplot(cor(av[cg,]),method = "color",addCoef.col = "grey",number.font =1)
col = colorRampPalette(c("navy","blue","firebrick3"))
col = colorRampPalette(c("#003366","white","#990033"))

low="#003366", high="#990033", mid="white"
col
corrplot(cor(av[cg,]),col = col(100))
#width=16, height=20

corrplot(cor(av[cg,]),type= "upper",col=col(10),diag = FALSE,tl.pos = "d")
corrplot(cor(av[cg,]),add =TRUE, type= "lower", method = "number",diag = FALSE, 
         tl.pos = "n",cl.pos = "n",col=col(10))
#width=16, height=20

corrplot(cor(av[cg,]),type= "upper",col=col(100),diag = FALSE,tl.pos = "d")
corrplot(cor(av[cg,]),add =TRUE, type= "lower", method = "pie", 
         tl.pos = "n",cl.pos = "n",col=col(100))
#width=16, height=20



###########################################################################################
table(sce.all.int$cellt )
table(Idents(sce.all.int))
Idents(sce.all.int) <- "celltype"
markers_genes_bycelltype <- FindAllMarkers(sce.all.int, logfc.threshold = 0.1, test.use = "wilcox",
                                           min.pct = 0.1, min.diff.pct = 0.2, only.pos = TRUE, max.cells.per.ident = 50, 
                                           assay = "RNA")

write.csv(markers_genes_bycelltype, file = "output/Figure5/markergenes_allepi.0421.csv")

library(clusterProfiler)
library(org.Mm.eg.db)
library(tibble)

gene_group <- markers_genes[,c("gene","p_val","cluster","avg_log2FC")]
colnames(gene_group) <- c("gene","p_val","Cluster","logFC")
head(gene_group)
table(gene_group$Cluster)

small_gene_group=filter(gene_group,gene_group$Cluster== "Club")
geneList <- small_gene_group[,4]
names(geneList) <- as.character(small_gene_group[,1])
geneList <- sort(geneList, decreasing = TRUE)

df_name=bitr(small_gene_group$gene, fromType="SYMBOL", toType=c("ENTREZID"), OrgDb="org.Mm.eg.db")
ego <- enrichGO(gene         = unique(df_name$ENTREZID),
                OrgDb         = org.Mm.eg.db,
                keyType       = 'ENTREZID',
                ont           = "ALL",
                pAdjustMethod = "BH",
                pvalueCutoff  = 0.05,
                qvalueCutoff  = 0.2,
                readable      = TRUE)

ego
#GO Gene Set Enrichment Analysis
length(geneList)
egseGO <- gseGO(geneList, OrgDb=org.Mm.eg.db,
                ont='BP',keyType="SYMBOL",
                nPerm=1000, minGSSize=100, maxGSSize=500,
                pvalueCutoff= 0.5, verbose=FALSE, by="fgsea")
head(egseGO,1);dim(egseGO)
head(data.frame(egseGO$ID,egseGO$Description))



library(enrichplot)
library(ggplot2)

p1=barplot(ego,showCategory=10)
p1
ggsave(p1,filename = "output/Figure5/Figure5/GSEA_barplot_Apoe-AT2 -goBP-term.pdf",width = 8,height = 6)


p2=dotplot(ego)
p2
ggsave(p2,filename = "output/Figure5/Figure5/GSEA_dotplot_Apoe-AT2 -goBP-term.pdf",width = 8,height = 6)


library(cowplot)
library(ggnewscale)
p3=cnetplot(ego, categorySize="pvalue", showCategory=5,
            foldChange=geneList,colorEdge = TRUE)
p3
ggsave(p3,filename = "output/Figure5/Figure5/GSEA_cnetplot_Apoe-AT2 _bp.pdf",width = 12,height = 6)

p4=cnetplot(ego, foldChange=geneList, circular = TRUE, colorEdge = TRUE)
ggsave(p4,filename = "output/Figure5/Figure5/GSEA_cnetplot—circle_Apoe-AT2 _bp.pdf",width = 12,height = 8)

library(ggupset)
p <- upsetplot(ego) 
p
ggsave(p,filename = "output/Figure5/Figure4/UpSet_Plot_Apoe-AT2 .pdf",width = 16,height = 6)

p<-goplot(ego,showCategory=20)
p
ggsave(p,filename = "output/Figure5/Figure4/GO_DAG_graph_Apoe-AT2 _gobp.pdf",width = 10,height = 8)

ridgeline plot for expression distribution of GSEA result
p <- ridgeplot(egseGO,showCategory=10)
p
ggsave(p,filename = "output/Figure5/Ridgeplot_IRvscontrol-all.pdf",width = 8,height = 12)

head(egseGO$Description)
#9 running score and preranked list of GSEA result
p1 <- gseaplot(egseGO,geneSetID=1,by="runningScore",title=egseGO$Description[1])
p2 <- gseaplot(egseGO,geneSetID=1,by="preranked",title=egseGO$Description[1])
p3 <- gseaplot(egseGO,geneSetID=2,by="runningScore",title=egseGO$Description[2])
p4 <- gseaplot(egseGO,geneSetID=2,by="preranked",title=egseGO$Description[2])
p <- cowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4])
p
ggsave(p,filename = "output/Figure5/Figure5/GSEA_score_1-2.pdf",width = 10,height = 8)

p1 <- gseaplot(egseGO,geneSetID=3,by="runningScore",title=egseGO$Description[3])
p2 <- gseaplot(egseGO,geneSetID=3,by="preranked",title=egseGO$Description[3])
p3 <- gseaplot(egseGO,geneSetID=4,by="runningScore",title=egseGO$Description[4])
p4 <- gseaplot(egseGO,geneSetID=4,by="preranked",title=egseGO$Description[4])
p <- cowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4])
ggsave(p,filename = "output/Figure5/Figure5/GSEA_score_3-4.pdf",width = 10,height = 8)

p1 <- gseaplot(egseGO,geneSetID=5,by="runningScore",title=egseGO$Description[5])
p2 <- gseaplot(egseGO,geneSetID=5,by="preranked",title=egseGO$Description[5])
p3 <- gseaplot(egseGO,geneSetID=6,by="runningScore",title=egseGO$Description[6])
p6 <- gseaplot(egseGO,geneSetID=6,by="preranked",title=egseGO$Description[6])
p <- cowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4])
ggsave(p,filename = "output/Figure5/Figure5/GSEA_score_5-6.pdf",width = 10,height = 8)

p6 <- gseaplot2(egseGO,geneSetID=1:4, pvalue_table=TRUE,
                color = pal, #c("#E495A5", "#86B875", "#7DB0DD"), 
                ES_geom = "dot")
p6

gseaplot(egseGO,geneSetID=1,title=egseGO$Description[1])
p3 <- gseaplot2(egseGO,3,title=egseGO$Description[3])
p5 <- gseaplot2(egseGO,1:3,subplots = 1)
p6 <- gseaplot2(egseGO,geneSetID=1:3, pvalue_table=TRUE,
                color = c("#E495A5", "#86B875", "#7DB0DD"), 
                ES_geom = "dot")
p7 <- gseaplot2(egseGO,4:6,subplots = 1)
p8 <- gseaplot2(egseGO,geneSetID=4:6, pvalue_table=TRUE,
                color = pal, #c("#E495A5", "#86B875", "#7DB0DD"), 
                ES_geom = "dot")
p <- cowplot::plot_grid(p5, p6,p7,p8, ncol=2, labels=LETTERS[1:4])
p
ggsave(p,filename = "output/Figure5/GSEA_score_c1-6_IRvscontrol-all.pdf",width = 20,height = 12)


## Senescent Signature
setwd("~/project/1_RILI")
sce.all.int <- readRDS("data/sce_epithelial_0217.rds")

table(sce.all.int@meta.data$celltype)
##featureplot
FeaturePlot(sce.all.int,features = genes_to_check,
            reduction = "umap",pt.size = 0.5,ncol = 4,cols = c("#ccccca", "#e61a2e"),order = T)&
  theme_bw()&
  theme(
    panel.grid = element_blank(),
    legend.position = "none",
    axis.ticks = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank(),
    plot.title = element_text(hjust = 0.5,size = 20)
  )

###markergene dotplot
#Senescence
genes_to_check <- c("Mcub","Fbl","Hist1h1d","Hist1h1a","Fam129a","Anp32b","Parp1","Lbr","Ssrp1",
                    "Cdca7l","Hist1h1e","Itpripl1")
#Senescence
#"Adipor1","Adipor1","Grem1",
genes_to_check <- c("Ccl2","Cxcl14","Cxcl12","Hp","Trf","Serping1","Mt1","Tmem176b","Mt2","Igfbp4","Apoe",
                    "Ccn1","Gas6","Mmp13","Tmem176a","Col3a1","Cd302")

DotPlot(sce.all.int, features = genes_to_check, group.by = "celltype")+coord_flip()+theme_bw()+
  theme(panel.grid = element_blank(),  
        axis.text.x=element_text(angle=90,hjust = 1,vjust=0.5))+ 
  scale_color_gradientn(values = seq(0,1,0.2),colours = c('#330066','#336699','#66CC66','#FFCC33'))+
  labs(x=NULL,y=NULL)+guides(size=guide_legend(order=3)) 

###########################################################
#Senescence
table(sce.all.int@meta.data$therapy)
genes_to_check <- c("Ccl2","Cxcl14","Cxcl12","Hp","Trf","Serping1","Mt1","Tmem176b","Mt2","Igfbp4","Apoe",
                    "Ccn1","Gas6","Mmp13","Tmem176a","Col3a1","Cd302")
library(paletteer) 
pal <- paletteer_d("ggsci::nrc_npg")[c(6,5,1,3,4,9,2)] 
pal
pal=colorRampPalette(RColorBrewer::brewer.pal(n = 9,name="YlOrRd"))(100)
#by therapy
#BiocManager::install("ggrastr")
genes_to_check <- c("Tmem176a","Tmem176b","Gas6","Ccn1","Apoe","Hp","Trf","Mt1")
table(sce.all.int@meta.data$celltype)
sce.all.int
pal
p <- VlnPlot(sce.all.int, features= genes_to_check, group.by ="celltype",stack = T,cols = pal,
              pt.size = 0.01, split.by = "therapy",flip = T)
p
#by time
p <- VlnPlot(sce.all.int, features = 
               genes_to_check , group.by = "celltype", stack = T, pt.size = 0.01,
             cols = mycolors,flip = T)
p
#control vs ICI， 
sce1 <-  fibro_sce[,fibro_sce@meta.data$therapy %in%c('Control',"ICI")]

p <- VlnPlot(sce1, features = genes_to_check , group.by = "celltype", stack = T, pt.size = 0.1,
             split.by = "therapy",cols = pal,flip = T)
p
p <- VlnPlot(sce1, features = c("Mmp13","Mt1") , group.by = "celltype", stack = F, pt.size = 0.1,
             split.by = "therapy",split.plot = T,cols = pal)

sce.all.int <- readRDS("data/sce_epithelial.rds")
